import { toEntry, toProductionEntry } from '../../util/input.js';
const title = 'Node.js';
const isEnabled = () => true;
const config = ['package.json'];
const packageJsonPath = (id) => id;
const resolveConfig = localConfig => {
    const scripts = localConfig.scripts;
    const entries = [toProductionEntry('server.js')];
    if (scripts && Object.keys(scripts).some(script => /(?<=^|\s)node\s(.*)--test/.test(scripts[script]))) {
        const patterns = ['**/*{.,-,_}test.?(c|m)js', '**/test-*.?(c|m)js', '**/test.?(c|m)js', '**/test/**/*.?(c|m)js'];
        entries.push(...patterns.map(id => toEntry(id)));
    }
    return entries;
};
const args = {
    positional: true,
    nodeImportArgs: true,
    resolve: ['test-reporter'],
    args: (args) => args.filter(arg => !/--test-reporter[= ](spec|tap|dot|junit|lcov)/.test(arg)),
};
export default {
    title,
    isEnabled,
    packageJsonPath,
    config,
    resolveConfig,
    args,
};
